services:
   seminar:
    container_name: seminar
    image: ${DOCKER_IMAGE_TAG}
    restart: always
    environment:
      # LiveKit 配置
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY:-devkey}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET:-12345678901234567890123456789012}
      - LIVEKIT_URL=${LIVEKIT_URL:-wss://livekit.matrix-net.tech}
      # 可选配置
      - NEXT_PUBLIC_SHOW_SETTINGS_MENU=${NEXT_PUBLIC_SHOW_SETTINGS_MENU:-true}
      - NEXT_PUBLIC_LK_RECORD_ENDPOINT=${NEXT_PUBLIC_LK_RECORD_ENDPOINT:-/api/record}
      # Node 环境
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    healthcheck:
      disable: true
    networks:
      - matrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seminar.rule=Host(`seminar.matrix-net.tech`)"
      - "traefik.http.routers.seminar.entrypoints=websecure"
      - "traefik.http.routers.seminar.service=seminar"
      - "traefik.http.routers.seminar.tls.certresolver=aliyunresolver"
      - "traefik.http.services.seminar.loadbalancer.server.port=3000"

   # 如果需要为 LiveKit 添加 HTTPS 代理（可选）
   # livekit-proxy:
   #   image: traefik/whoami  # 这里应该是你的 LiveKit 服务配置
   #   networks:
   #     - matrix-network
   #   labels:
   #     - "traefik.enable=true"
   #     - "traefik.http.routers.livekit.rule=Host(`livekit.matrix-net.tech`)"
   #     - "traefik.http.routers.livekit.entrypoints=websecure"
   #     - "traefik.http.routers.livekit.tls.certresolver=aliyunresolver"
   #     - "traefik.http.services.livekit.loadbalancer.server.port=7880"

networks:
  matrix-network:
    external: true